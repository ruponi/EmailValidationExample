{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid2\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid3\'02\'02.;}{\levelnumbers\'01;}\fi-360\li2160\lin2160 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid201\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl580\sa321\partightenfactor0

\f0\b\fs48 \cf2 \expnd0\expndtw0\kerning0
iOS coding challenge\
Goal\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\b0\fs24 \cf2 Typing in email addresses on mobile devices is error prone, and time consuming. The goal here is to reduce typos, mistakes, and save time entering addresses by using autocomplete and validation.\
\pard\pardeftab720\sl580\sa321\partightenfactor0

\b\fs48 \cf2 Objective\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\b0\fs24 \cf2 Your objective is to build an incredible experience for users entering a single email address into a text field, while at the same time impressing us with how simple and clean your code is.\
We receive many submissions daily, yours needs to stand out. We'd love to be impressed by the user interface, by your code, and by the little touches that make it slick.\
\pard\pardeftab720\sl580\sa321\partightenfactor0

\b\fs48 \cf2 Background\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\b0\fs24 \cf2 Invoice Simple's customers are owner operators who run their own business, such as plumbers, cleaners, contractors etc. They are not very tech savvy, and as such need user interfaces that "just work".\
\pard\pardeftab720\sl580\sa321\partightenfactor0

\b\fs48 \cf2 Requirements\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\sa240\partightenfactor0
\ls1\ilvl0
\b0\fs24 \cf2 \kerning1\expnd0\expndtw0 {\listtext	1.	}\expnd0\expndtw0\kerning0
Email format validation\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\sa240\partightenfactor0
\ls1\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	1.	}\expnd0\expndtw0\kerning0
Example: "alex@gmail" is not a valid email\uc0\u8232 \
\ls1\ilvl1\kerning1\expnd0\expndtw0 {\listtext	2.	}\expnd0\expndtw0\kerning0
The user interface should indicate whether or not the email address is valid\uc0\u8232 \
\ls1\ilvl1\kerning1\expnd0\expndtw0 {\listtext	3.	}\expnd0\expndtw0\kerning0
Where appropriate the interface should indicate what is wrong with the address\uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\sa240\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	2.	}\expnd0\expndtw0\kerning0
Email deliverability validation\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\sa240\partightenfactor0
\ls1\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	1.	}\expnd0\expndtw0\kerning0
Users often typo an address, for example wrong domain name (gmail.con vs gmail.com), or just mis type it\uc0\u8232 \
\ls1\ilvl1\kerning1\expnd0\expndtw0 {\listtext	2.	}\expnd0\expndtw0\kerning0
Use an existing API to confirm the email address can be delivered to, we recommend getting a free account at kickbox.io, and using their API\uc0\u8232 \
\ls1\ilvl1\kerning1\expnd0\expndtw0 {\listtext	3.	}\expnd0\expndtw0\kerning0
Where appropriate the interface should indicate what is wrong\uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\sa240\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	3.	}\expnd0\expndtw0\kerning0
Autocomplete domain names\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl280\sa240\partightenfactor0
\ls1\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	1.	}\expnd0\expndtw0\kerning0
Typing email addresses is a pain, wouldn't it be nice if we didn't have to type the whole thing in?\uc0\u8232 \
\ls1\ilvl1\kerning1\expnd0\expndtw0 {\listtext	2.	}\expnd0\expndtw0\kerning0
We have observed that most email addresses end in popular domain names such as gmail.com, yahoo.com\uc0\u8232 \
\ls1\ilvl1\kerning1\expnd0\expndtw0 {\listtext	3.	}\expnd0\expndtw0\kerning0
Your autocomplete should suggest likely domain names and complete addresses\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sl280\sa240\partightenfactor0
\ls1\ilvl2\cf2 \kerning1\expnd0\expndtw0 {\listtext	1.	}\expnd0\expndtw0\kerning0
For example if the user types "alex@" we'd expect suggestions based on most popular domains, say "alex@gmail.com", "alex@yahoo.com", ...\uc0\u8232 \
\ls1\ilvl2\kerning1\expnd0\expndtw0 {\listtext	2.	}\expnd0\expndtw0\kerning0
If the user refines and types "alex@g" we'd expect suggestions based on popular domains beginning with g eg "alex@gmail.com", "alex@gmail.co.uk", ...\uc0\u8232 \
\pard\pardeftab720\sl580\sa321\partightenfactor0

\b\fs48 \cf2 Implementation\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\sa240\partightenfactor0
\ls2\ilvl0
\b0\fs24 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
You should build an app, that we can run on any iOS device we might have at the office\uc0\u8232 \
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The app should have one screen, with one text box, that we can type an email address into\uc0\u8232 \
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Please write your code in Objective C\uc0\u8232 \
\pard\pardeftab720\sl580\sa321\partightenfactor0

\b\fs48 \cf2 Evaluating your solution\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\b0\fs24 \cf2 Your solution will be evaluated against the following criteria:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\sa240\partightenfactor0
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	1.	}\expnd0\expndtw0\kerning0
We were able to easily build and run your code using XCode on OSX\uc0\u8232 \
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2.	}\expnd0\expndtw0\kerning0
Code quality - is your code clean, simple, commented, modern, well designed\uc0\u8232 \
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3.	}\expnd0\expndtw0\kerning0
User experience - how simple, intuitive and clear is the UI\uc0\u8232 \
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	4.	}\expnd0\expndtw0\kerning0
UI - make sure you're using a good layout, simple/modern colors. It's best to stick with current standards.\uc0\u8232 \
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	5.	}\expnd0\expndtw0\kerning0
Error handling - your code should handle potential errors gracefully\uc0\u8232 }